version: "3.8"

services:
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3308:3306"  # Host 3308 maps to MySQL's 3306 (dev only)
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      DB_HOST: mysql
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
    depends_on:
      - mysql  # No `condition`, use healthcheck + wait-for in container
    ports:
      - "5000:5000"  # Host 5000 maps to backend container
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - todo-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "3000:80"  # Host 3000 maps to frontend container
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - todo-net

volumes:
  mysql-data:

networks:
  todo-net:
